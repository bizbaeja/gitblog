{"pageProps":{"snack":{"title":"React-query","date":"2022-12-13T00:00:00.000Z","description":"TIL","body":{"raw":"\n```tsx\nindex.tsx;\nimport { QueryClient, QueryClientProvider } from 'react-query';\nconst queryClient = new QueryClient();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <QueryClientProvider client={queryClient}>\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <React.StrictMode>\n        <App></App>\n      </React.StrictMode>\n    </ThemeProvider>\n  </QueryClientProvider>\n);\n```\n\n- 역할 : 우리 스스로 실행하고 있었던 로직들을 축약해준다.\n\n1. fetcher 함수 만들기 (api.tsx 파일을 만들어 그 안에 넣는다) fetcher 함수는 꼭 fetch promiser return 해줘야한다.\n\n```tsx\nexport function fetchCoins() {\n  return fetch('https://api.coinpaprika.com/vi/com').then((response) =>\n    response.json()\n  );\n}\n```\n\n1. fetch then reponse 를 가져와서 response.json 을 return 해준다. fetcher 함수 fetchCoin은 URL 을 부르고 그 URL 로부타 json 을 return 한다.\n\ncoin.tsx\n\n첫번째 인자 allCoins 는 고유식별자 두번째 인자는 fetcher function (api.tsx 의 fetchCoins)\n\nuseQuery 는 isLoadiing 이라는 boolean 값을 return 한다.\n\n```tsx\n\nunction Coins() {\n  useQuery(\"allCoins\",fetchCoins)\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(1, 100));\n  //     setLoading(false);\n  //     console.log(coins);\n  //   })();\n  // }, []);\n  return (\n```\n","code":"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var C=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),x=(e,n)=>{for(var r in n)s(e,r,{get:n[r],enumerable:!0})},c=(e,n,r,i)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let o of p(n))!f.call(e,o)&&o!==r&&s(e,o,{get:()=>n[o],enumerable:!(i=h(n,o))||i.enumerable});return e};var g=(e,n,r)=>(r=e!=null?u(m(e)):{},c(n||!e||!e.__esModule?s(r,\"default\",{value:e,enumerable:!0}):r,e)),y=e=>c(s({},\"__esModule\",{value:!0}),e);var a=C((R,l)=>{l.exports=_jsx_runtime});var M={};x(M,{default:()=>v,frontmatter:()=>j});var t=g(a()),j={title:\"React-query\",date:new Date(16708896e5),description:\"TIL\"};function d(e){let n=Object.assign({pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\",ol:\"ol\",p:\"p\"},e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`index.tsx;\nimport { QueryClient, QueryClientProvider } from 'react-query';\nconst queryClient = new QueryClient();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <QueryClientProvider client={queryClient}>\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <React.StrictMode>\n        <App></App>\n      </React.StrictMode>\n    </ThemeProvider>\n  </QueryClientProvider>\n);\n`})}),`\n`,(0,t.jsxs)(n.ul,{children:[`\n`,(0,t.jsx)(n.li,{children:\"\\uC5ED\\uD560 : \\uC6B0\\uB9AC \\uC2A4\\uC2A4\\uB85C \\uC2E4\\uD589\\uD558\\uACE0 \\uC788\\uC5C8\\uB358 \\uB85C\\uC9C1\\uB4E4\\uC744 \\uCD95\\uC57D\\uD574\\uC900\\uB2E4.\"}),`\n`]}),`\n`,(0,t.jsxs)(n.ol,{children:[`\n`,(0,t.jsx)(n.li,{children:\"fetcher \\uD568\\uC218 \\uB9CC\\uB4E4\\uAE30 (api.tsx \\uD30C\\uC77C\\uC744 \\uB9CC\\uB4E4\\uC5B4 \\uADF8 \\uC548\\uC5D0 \\uB123\\uB294\\uB2E4) fetcher \\uD568\\uC218\\uB294 \\uAF2D fetch promiser return \\uD574\\uC918\\uC57C\\uD55C\\uB2E4.\"}),`\n`]}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`export function fetchCoins() {\n  return fetch('https://api.coinpaprika.com/vi/com').then((response) =>\n    response.json()\n  );\n}\n`})}),`\n`,(0,t.jsxs)(n.ol,{children:[`\n`,(0,t.jsx)(n.li,{children:\"fetch then reponse \\uB97C \\uAC00\\uC838\\uC640\\uC11C response.json \\uC744 return \\uD574\\uC900\\uB2E4. fetcher \\uD568\\uC218 fetchCoin\\uC740 URL \\uC744 \\uBD80\\uB974\\uACE0 \\uADF8 URL \\uB85C\\uBD80\\uD0C0 json \\uC744 return \\uD55C\\uB2E4.\"}),`\n`]}),`\n`,(0,t.jsx)(n.p,{children:\"coin.tsx\"}),`\n`,(0,t.jsx)(n.p,{children:\"\\uCCAB\\uBC88\\uC9F8 \\uC778\\uC790 allCoins \\uB294 \\uACE0\\uC720\\uC2DD\\uBCC4\\uC790 \\uB450\\uBC88\\uC9F8 \\uC778\\uC790\\uB294 fetcher function (api.tsx \\uC758 fetchCoins)\"}),`\n`,(0,t.jsx)(n.p,{children:\"useQuery \\uB294 isLoadiing \\uC774\\uB77C\\uB294 boolean \\uAC12\\uC744 return \\uD55C\\uB2E4.\"}),`\n`,(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:\"language-tsx\",children:`\nunction Coins() {\n  useQuery(\"allCoins\",fetchCoins)\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(1, 100));\n  //     setLoading(false);\n  //     console.log(coins);\n  //   })();\n  // }, []);\n  return (\n`})})]})}function L(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}var v=L;return y(M);})();\n;return Component;"},"_id":"27th.mdx","_raw":{"sourceFilePath":"27th.mdx","sourceFileName":"27th.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"27th"},"type":"Post"}},"__N_SSG":true}